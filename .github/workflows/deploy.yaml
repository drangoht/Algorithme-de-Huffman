name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analyze:
    name: üîç Build & Analyze
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET 9.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x-preview'

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache .NET tools
        uses: actions/cache@v3
        with:
          path: ~/.dotnet/tools
          key: ${{ runner.os }}-dotnet-tools-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-tools-

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarCloud tools
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-coverage

      - name: üîç SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"${{ github.repository_owner }}_${{ github.event.repository.name }}" \
          /o:"${{ github.repository_owner }}" \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml \
          /d:sonar.coverage.exclusions="**/Program.cs" \
          /d:sonar.branch.name="${{ github.ref_name }}"

      - name: üèóÔ∏è Build & Test
        run: |
          dotnet build ./src/HuffmanWeb/HuffmanWeb.Server/HuffmanWeb.Server.csproj --no-incremental
          dotnet-coverage collect 'dotnet test ./src/HuffmanWeb/HuffmanWeb.Server/HuffmanWeb.Server.csproj' -f xml -o 'coverage.xml'
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  build-docker:
    name: ÔøΩ Build & Push Docker
    needs: analyze
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: üîë Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üèóÔ∏è Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/HuffmanWeb/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/huffmanweb:latest

  deploy:
    name: üöÄ Deploy
    needs: build-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: üåê Deploy to VPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            sudo docker container stop huffmanweb || true
            sudo docker container rm huffmanweb || true
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/huffmanweb:latest
            sudo docker run -d --name huffmanweb -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/huffmanweb:latest

